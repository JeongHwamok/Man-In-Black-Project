<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	<!-- 리뷰 조회용 쿼리문 -->
	<entry key="selectMyReview">		 
		SELECT R.REVIEW_NO
		     , MAX(R.REVIEW_FILE_PATH)
		     , MAX(P.PRODUCT_NAME)
		     , MAX(S.SIZE_NAME)
		     , MAX(OI.ORDER_ITEM_QUANTITY)
		     , MAX(O.ORDER_DATE)
		     , MAX(R.REVIEW_DATE)
		     , MAX(R.REVIEW_CONTENT)
		     , MAX(M.MEMBER_NO)
		     , MAX(R.REVIEW_FILE_NAME)
		     , MAX(R.REVIEW_STATUS)
		FROM REVIEW R
		JOIN PRODUCT P ON (R.PRODUCT_NO = P.PRODUCT_NO)
		JOIN "SIZE" S ON (P.SIZE_NO = S.SIZE_NO)
		JOIN MEMBER M ON (M.MEMBER_NO = R.MEMBER_NO)
		JOIN "ORDER" O ON (O.MEMBER_NO = R.MEMBER_NO)
		JOIN ORDER_ITEM OI ON (O.ORDER_NO = OI.ORDER_NO)
		WHERE M.MEMBER_ID = ?
		  AND R.REVIEW_STATUS = 'Y'
		GROUP BY R.REVIEW_NO
	</entry>
	
	<!-- 리뷰 작성용 쿼리문 -->
	<entry key="insertReview">
		INSERT INTO REVIEW VALUES(SEQ_REVIEW_NO.NEXTVAL
		                        , ?
		                        , ?
		                        , ?
		                        , 'Y'
		                        , SYSDATE
		                        , ?
		                        , ?)
	</entry>
	
	<!-- 리뷰 삭제용 쿼리문 (업데이트로 처리) -->
	<entry key="deleteReview">
		UPDATE REVIEW
		   SET REVIEW_STATUS = 'N'
		 WHERE REVIEW_NO = ?
	</entry>
	
	<!-- 상품별 리뷰 조회 쿼리문 -->
	<entry key="selectProductReview">
		SELECT * FROM (
	    SELECT REVIEW_NO
	         , REVIEW_CONTENT
	         , REVIEW_FILE_NAME
	         , REVIEW_FILE_PATH
	         , REVIEW_DATE
	         , SUBSTR(M.MEMBER_ID, 1, 3) || '*****' AS MEMBER_ID
	      FROM REVIEW R
	      JOIN MEMBER M ON(R.MEMBER_NO = M.MEMBER_NO) 
	     WHERE PRODUCT_NO = ?
	       AND REVIEW_STATUS = 'Y'
	     ORDER BY REVIEW_DATE DESC
	) WHERE ROWNUM &lt;= 2
	</entry>
	
	<!-- 상품별 전체리뷰 조회용 -->
	<entry key="selectAllReview">
		SELECT MAX(R.REVIEW_NO)
		     , MAX(R.REVIEW_FILE_PATH)
		     , MAX(P.PRODUCT_NAME)
		     , MAX(S.SIZE_NAME)
		     , MAX(OI.ORDER_ITEM_QUANTITY)
		     , MAX(O.ORDER_DATE)
		     , MAX(R.REVIEW_DATE)
		     , MAX(R.REVIEW_CONTENT)
		     , MAX(M.MEMBER_NO)
		     , MAX(R.REVIEW_FILE_NAME)
		     , MAX(R.REVIEW_STATUS)
				FROM REVIEW R
				JOIN PRODUCT P ON (R.PRODUCT_NO = P.PRODUCT_NO)
				JOIN "SIZE" S ON (P.SIZE_NO = S.SIZE_NO)
				JOIN MEMBER M ON (M.MEMBER_NO = R.MEMBER_NO)
				JOIN "ORDER" O ON (O.MEMBER_NO = R.MEMBER_NO)
				JOIN ORDER_ITEM OI ON (O.ORDER_NO = OI.ORDER_NO)
				WHERE P.PRODUCT_NO = ?
				  AND R.REVIEW_STATUS = 'Y'
		        GROUP BY REVIEW_CONTENT
	</entry>
	
	<!-- 관리자용 리뷰 조회용 쿼리문 -->
	<entry key="adminSelectReview">		 
		SELECT DISTINCT R.REVIEW_NO,
		       R.REVIEW_CONTENT,
		       R.REVIEW_FILE_PATH,
		       R.REVIEW_DATE,
		       R.REVIEW_STATUS,
		       M.MEMBER_NO,
		       R.PRODUCT_NO
		FROM REVIEW R
		JOIN MEMBER M ON M.MEMBER_NO = R.MEMBER_NO
		JOIN "ORDER" O ON O.MEMBER_NO = R.MEMBER_NO
		ORDER BY R.REVIEW_NO
	</entry>
	<!-- 관리자용 리뷰상태 수정 -->
	<entry key="adminUpdateReview">		 
		UPDATE REVIEW
		SET REVIEW_STATUS = ?
		WHERE REVIEW_NO = ?
	</entry>

</properties>